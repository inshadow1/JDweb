name: Deploy to Baota

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 步骤 1：检出代码
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      # 步骤 2：设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 步骤 3：安装依赖
      - name: Install Dependencies
        run: npm install

      # 步骤 4：构建项目
      - name: Build Project
        run: |
          sudo chmod -R 777 .
          npm run build

      # 步骤 5：同步 build 文件夹到服务器（排除 .user.ini 的删除）
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rsync -avz --delete --exclude='.user.ini' -e "ssh -o StrictHostKeyChecking=no" $GITHUB_WORKSPACE/build/ /www/wwwroot/www.yelv.site/
            sudo chown -R www:www /www/wwwroot/www.yelv.site
            sudo systemctl restart nginx

      # # 步骤 3：调试工作目录并手动同步
      # - name: Debug workspace
      #   run: |
      #     echo "Current workspace: $GITHUB_WORKSPACE"
      #     pwd
      #     ls -la
      #     # 使用 rsync 同步文件，排除删除 .user.ini
      #     rsync -avz --delete --exclude='.user.ini' -e "ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }}" "$GITHUB_WORKSPACE/build/" root@${{ secrets.SERVER_IP }}:/www/wwwroot/www.yelv.site/build/
      #     # 确保文件权限正确（根据宝塔要求设置为 www:www）
      #     ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} root@${{ secrets.SERVER_IP }} "sudo chown -R www:www /www/wwwroot/www.yelv.site/build"
      #     # 重启 Nginx 使配置生效
      #     ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} root@${{ secrets.SERVER_IP }} "sudo systemctl restart nginx"
