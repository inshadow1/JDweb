{"archive":{"blogPosts":[{"id":"npm前端包","metadata":{"permalink":"/blog/blog/npm前端包","editUrl":"https://github.com/blog/2025-02-20-npm前端包.md","source":"@site/blog/2025-02-20-npm前端包.md","title":"npm前端包","description":"Create by fall on 02 Mar 2023","date":"2025-02-20T00:00:00.000Z","tags":[{"inline":true,"label":"npm","permalink":"/blog/blog/tags/npm"},{"inline":true,"label":"依赖","permalink":"/blog/blog/tags/依赖"},{"inline":true,"label":"常用依赖","permalink":"/blog/blog/tags/常用依赖"}],"readingTime":25.575,"hasTruncateMarker":false,"authors":[{"name":"yelv","title":"Coding For fun","url":"https://github.com/inshadow1","imageURL":"/blog/img/128100849_4.png","key":"fall","page":null}],"frontMatter":{"slug":"npm前端包","title":"npm前端包","authors":"fall","tags":["npm","依赖","常用依赖"]},"unlisted":false,"nextItem":{"title":"2分钟环境搭建","permalink":"/blog/blog/2分钟环境搭建"}},"content":"> Create by **fall** on 02 Mar 2023\r\n> Recently revised in 11 Feb 2025\r\n\r\n# packages\r\n\r\n所有的包名称就是 npm 中的包名称，可以直接在 npm 官网进行搜索\r\n\r\n## 系统工具\r\n\r\n| 包名称    | 英文介绍                                                                      | 介绍                               |\r\n| --------- | ----------------------------------------------------------------------------- | ---------------------------------- |\r\n| node-cron | This module allows you to schedule task in node.js using full crontab syntax. | 计划执行一些内容                   |\r\n| croner    | Trigger functions or evaluate cron expressions in JavaScript or TypeScript.   | 定时执行任务，并提供即将到来的事件 |\r\n| cronstrue |                                                                               | 将 `cron` 表达式转换更可读         |\r\n|           |                                                                               |                                    |\r\n\r\n### git 工具\r\n\r\n| 包名称      | 英文介绍                             | 介绍                       |\r\n| ----------- | ------------------------------------ | -------------------------- |\r\n| husky       |                                      | 提供 git 相关的 hooks 方法 |\r\n| lint-staged | Run linters against staged git files | 在 git 缓存区强制执行 lint |\r\n|             |                                      |                            |\r\n|             |                                      |                            |\r\n|             |                                      |                            |\r\n\r\n### 命令行相关\r\n\r\n| 包名称                | 英文介绍                                                                                    | 介绍                               |\r\n| --------------------- | ------------------------------------------------------------------------------------------- | ---------------------------------- |\r\n| concurrently          | Run multiple commands concurrently.                                                         | 实时运行多个命令                   |\r\n| start-server-and-test | Starts server, waits for URL, then runs test command; when the tests end, shuts down server |                                    |\r\n| live-server           |                                                                                             | 提供 `npx live-server index.html`  |\r\n| http-server           |                                                                                             | `npx http-server [path] [options]` |\r\n| inquirer              | A collection of common interactive command line user interfaces.                            | 通用终端 UI 输入接口               |\r\n| ora                   |                                                                                             | 优雅的终端加载动画                 |\r\n| node-jq               |                                                                                             | 命令行 JSON 处理工具               |\r\n| enquirer              |                                                                                             | 命令行选择功能工具                 |\r\n| node-gyp              | compiling native addon modules for Node.js.                                                 |                                    |\r\n|                       |                                                                                             |                                    |\r\n| np                    |                                                                                             | 更好用的 npm publish               |\r\n| release-it            | Automate versioning and package publishing                                                  | 自动打包和发布更新                 |\r\n| chalk                 |                                                                                             | 命令行内容着色                     |\r\n| voici.js              |                                                                                             | 终端表格打印                       |\r\n| fx                    | `fx data.json`                                                                              | JSON 命令行处理工具                |\r\n| gradient-string       | Beautiful color gradients in terminal output                                                | 为命令行加上渐变                   |\r\n|                       |                                                                                             |                                    |\r\n\r\n### 操作系统\r\n\r\n| 包名称    | 介绍                             | 英文介绍                         |\r\n| :-------- | :------------------------------- | :------------------------------- |\r\n| wallpaper | 获取或者设置桌面壁纸             | Get or set the desktop wallpaper |\r\n| diskusage | 跨平台磁盘使用统计               |                                  |\r\n| node-osc  | 用于在媒体设备之间进行通信的协议 |                                  |\r\n|           |                                  |                                  |\r\n\r\n## 工程化\r\n\r\n| 包名称             | 英文介绍                                                      | 介绍                                    |\r\n| ------------------ | ------------------------------------------------------------- | --------------------------------------- |\r\n| npm-check-updates  |                                                               | `-i` 交互模式，查看潜在的升级并逐个选择 |\r\n| knip               | finds unused files, dependencies and exports in your projects | 查看 TS 项目中没有用到的文件和依赖      |\r\n| dependency-cruiser |                                                               | 将应用的依赖可视化                      |\r\n|                    |                                                               |                                         |\r\n|                    |                                                               |                                         |\r\n|                    |                                                               |                                         |\r\n\r\n### 打包\r\n\r\n| 包名称   | 英文介绍 | 介绍                  |\r\n| -------- | -------- | --------------------- |\r\n| rspack   |          | 基于 Rust 的打包工具  |\r\n| rolldown |          | 重写 rollup，更快更强 |\r\n|          |          |                       |\r\n|          |          |                       |\r\n\r\n### 格式化 lint\r\n\r\n| 包名称         | 英文介绍                                                                   | 介绍                          |\r\n| -------------- | -------------------------------------------------------------------------- | ----------------------------- |\r\n| quick-lint-js  | finds bugs in JavaScript programs.                                         | 快速分析 js 中的语法错误，C++ |\r\n| sugarss        | Indent-based CSS syntax for [PostCSS](https://github.com/postcss/postcss). | 强缩进 CSS 语法检测           |\r\n| @biomejs/biome | fast formatter for JavaScript, TypeScript, JSX, and JSON                   | rust 重写的格式化工具，快！   |\r\n|                |                                                                            |                               |\r\n\r\n### 测试\r\n\r\n| 包名称     | 英文介绍                                         | 介绍                                   |\r\n| ---------- | ------------------------------------------------ | -------------------------------------- |\r\n| jest       | User-friendly glob matching.Based on `fast-glob` | 筛选文件目录                           |\r\n| autocannon | HTTP/1.1 基准测试工具                            |                                        |\r\n| vitest     |                                                  | 基于 vite 的测试，开箱可用 import 语法 |\r\n| jsdom      |                                                  | 纯 JS 实现的 DOM                       |\r\n| fetch-mock |                                                  | 请求 mock                              |\r\n|            |                                                  |                                        |\r\n\r\n### 语法转换\r\n\r\n| 包名称   | 官方介绍                                                     | 介绍                             |\r\n| -------- | ------------------------------------------------------------ | -------------------------------- |\r\n| sucrase  | Sucrase is about 20x faster than Babel                       | babel 的替代品，允许更快地构建   |\r\n| unplugin | Unified plugin system for build tools.                       | 制作所有打包平台都可以使用的插件 |\r\n| swc      | super-fast TypeScript / JavaScript compiler written in Rust. | 超快的 ts / js 编译器            |\r\n|          |                                                              |                                  |\r\n|          |                                                              |                                  |\r\n|          |                                                              |                                  |\r\n\r\n## 通用工具\r\n\r\n这些工具是不依赖于 DOM，前后端通用的 package\r\n\r\n| 包名称                    | 英文介绍                                                             | 介绍                                        |\r\n| ------------------------- | -------------------------------------------------------------------- | ------------------------------------------- |\r\n| ohash                     | Super fast hashing library written in Vanilla JS                     | 原生书写的快速哈希库，判断对象内容是否相等  |\r\n| imask                     |                                                                      | 文字校验功能                                |\r\n| validator                 | A library of string validators and sanitizers.                       | 字符串校验库                                |\r\n| zod                       | schema validation                                                    | 字符串等数据的校验工具                      |\r\n| destr                     |                                                                      | 实现同 `JSON.parse` 的功能但更安全，支持 ts |\r\n| file-type                 |                                                                      | 使用二进制判断文件的类型                    |\r\n| rxjs                      | Reactive Extensions For JavaScript                                   | JS 的响应式扩展                             |\r\n| chardet                   |                                                                      | 文件，字符使用的编码方式检测库              |\r\n| brotli-wasm               |                                                                      | 基于 Brotli 算法的压缩和解压缩工具          |\r\n| filesize                  |                                                                      | 把文件大小换算为易读的内容                  |\r\n| math.js                   |                                                                      | 处理复数、分数、单位、矩阵、符号计算等      |\r\n| @faker-js/faker           | Generate massive amounts of fake data                                | 生成大量假数据                              |\r\n| ip-address                |                                                                      | 解析和操作 IPv4/6 地址                      |\r\n| lossless-json             |                                                                      | 避免数据过大影响 json 解析                  |\r\n| china-division            |                                                                      | 中国行政区划（五级）                        |\r\n| emoji-regex               | offers a regular expression to match all emoji symbols and sequences | 正则匹配所有的 emoji                        |\r\n| culori                    |                                                                      | 根据颜色获取颜色名称                        |\r\n| color-names               |                                                                      | 根据颜色获取颜色名称（或者反向）            |\r\n| zip-stream                |                                                                      |                                             |\r\n| @zip.js/zip.js            |                                                                      |                                             |\r\n| fast-csv                  |                                                                      | 对 csv 文件进行快速处理                     |\r\n| web-worker                |                                                                      | 浏览器和 node 一致的 worker                 |\r\n| alfaaz                    | the fastest multilingual word counter                                | 号称最快的字数统计工具                      |\r\n| workerpool                |                                                                      | 将任务分配给工作池                          |\r\n| pretty-ms                 |                                                                      | 将 ms 转换为好看的形式                      |\r\n| chroma-js                 | zero-dependency color conversions                                    | 无依赖的颜色转换工具                        |\r\n| immer                     |                                                                      | 不可变数据处理                              |\r\n| mutative                  | efficient immutable                                                  | 不可变数据，效率更高                        |\r\n| js-yaml                   |                                                                      | 解析 yaml 文件                              |\r\n| tinybase                  | _reactive_ data store for local-first apps.                          | 本地响应式数据库                            |\r\n| microdiff                 | object and array differ                                              | 查看 array 和 object 的不同                 |\r\n| madge                     |                                                                      | 给出指定文件的依赖关系                      |\r\n| browser-or-node           |                                                                      | 判断当前的环境，                            |\r\n| merge-anything            |                                                                      | 合并，但是是递归合并                        |\r\n| ejs                       |                                                                      | 模板引擎                                    |\r\n| bwip-js                   |                                                                      | 条形码生成工具                              |\r\n| superstruct               |                                                                      | 数据格式验证工具（运行时                    |\r\n| es-toolkit                |                                                                      | 正实现着 Lodash 所有功能，类型支持，性能 up |\r\n| @diffusionstudio/vits-web |                                                                      | 本地语音生成工具，阅读                      |\r\n| calendar-link             | Calendar link generator for popular services                         | 在各个流行平台上生成日历事件                |\r\n| tesseract.js              |                                                                      | 基于 js 的 OCR 识别                         |\r\n| humanifyjs                |                                                                      | 代码反混淆                                  |\r\n| colorthief                | Grab the color palette from an image                                 | 从图像中获取主要的颜色                      |\r\n| match-sorter              |                                                                      | 确定性最佳匹配数组排序                      |\r\n| tinybench                 | Benchmark your code easily                                           |                                             |\r\n| immutable                 |                                                                      | 不可变数据，支持 map                        |\r\n| fraction.js               |                                                                      | 数学更精确的计算                            |\r\n|                           |                                                                      |                                             |\r\n|                           |                                                                      |                                             |\r\n|                           |                                                                      |                                             |\r\n|                           |                                                                      |                                             |\r\n|                           |                                                                      |                                             |\r\n\r\n### 时间处理\r\n\r\n| 包名称         | 英文介绍                                      | 介绍                                 |\r\n| -------------- | --------------------------------------------- | ------------------------------------ |\r\n| timeago.js     | format datetime with `*** time ago`           | 返回 XX 时间之前                     |\r\n| luxon          | working with dates and times in JavaScript.   | 时间日期处理                         |\r\n| date-fns       |                                               | 提供超多关于日期的处理函数           |\r\n| chrono-node    | A natural language date parser in Javascript. | 自然语言日期处理器                   |\r\n| dayjs          |                                               | 极小的事件处理工具                   |\r\n| @formkit/tempo | as small and easy to use as possible.         | 小巧好用的时间工具（有 TS 类型支持） |\r\n\r\n## node\r\n\r\n更倾向于服务端（node）使用的内容\r\n\r\n| 包名称        | 英文介绍                                                                  | 介绍                                            |\r\n| ------------- | ------------------------------------------------------------------------- | ----------------------------------------------- |\r\n| undici        |                                                                           | 请求库                                          |\r\n| graphql       | a query language                                                          | Meta 用的查询语言（一个接口请求前端想要的数据） |\r\n| staticrypt    |                                                                           | 轻松加密静态站点                                |\r\n| migrate       |                                                                           | 一个抽象迁移框架                                |\r\n| ws            |                                                                           | 使用 websocket                                  |\r\n| pm2           | ·                                                                         | 后端资源监听                                    |\r\n| piscina       |                                                                           | 线程池控制工具                                  |\r\n| nodemon       |                                                                           | 监听文件变动并自动执行                          |\r\n| mqtt          | client library for the [MQTT](http://mqtt.org/) protocol                  | 支持 mqtt 协议                                  |\r\n| pureimage     | 100% JavaScript implementation of theCanvas 2D drawing API for NodeJS     | 纯 node 实现 2d canvas 绘制                     |\r\n| tinypool      |                                                                           | 轻量级/微型 Node.js 工作线程池                  |\r\n| necord        |                                                                           | 用于创建 Discord 机器人的框架                   |\r\n| globby        | User-friendly glob matching.Based on `fast-glob`                          | 筛选文件目录                                    |\r\n| passport      |                                                                           | 后端权限验证工具                                |\r\n| @humanfs/node | what a modern, high-level filesytem API should look like.                 | 原生 fs API 应该成为的那样                      |\r\n| node-usb      |                                                                           | Node 的改进 USB 库                              |\r\n| phin          | The lightweight Node.js HTTP client                                       | 轻量请求库                                      |\r\n| node-jq       |                                                                           | c 的 json 处理工具                              |\r\n| node-usb      |                                                                           | 使用 node 操作 usb                              |\r\n| wait-on       | wait for files, ports, sockets, and http(s) resources to become available | 等待文件等变得可用                              |\r\n| piscina       | fast, efficient Node.js Worker Thread Pool implementation                 | 工作线程池库                                    |\r\n| @vinejs/vine  | One of the fastest validation library for Node.js                         | 号称最快速的表单验证库                          |\r\n\r\n### 文件处理\r\n\r\n| 包名称                   | 英文介绍                                             | 介绍                     |\r\n| ------------------------ | ---------------------------------------------------- | ------------------------ |\r\n| node-xlsx                |                                                      | 使用 node 处理 xlsx 文件 |\r\n| imgly/background-removal |                                                      | 移除图像背景             |\r\n| sharp                    | high speed Node.js module is to convert large images | 超快速图片处理           |\r\n| jimp                     |                                                      | 无依赖的 Node 图像处理库 |\r\n| node-poppler             |                                                      | 异步 PDF 渲染器          |\r\n| chokidar                 |                                                      | 更好的 watchFile         |\r\n| exiftool-vendored        |                                                      | 图片拍摄信息数据访问     |\r\n\r\n### 数据库\r\n\r\n| 包名称           | 英文介绍                                                          | 介绍                             |\r\n| ---------------- | ----------------------------------------------------------------- | -------------------------------- |\r\n| lmdb             |                                                                   | LMDB 的数据存储包装器。          |\r\n| mongoose         | Mongoose is a MongoDB object modeling tool                        | 对象建模工具                     |\r\n| lowdb            | Simple to use local JSON database.                                | 简单的 JSON 作为 DB              |\r\n| json-server      | Get a full fake REST API with zero coding in less than 30 seconds | 也是 JSON 作为 DB                |\r\n| node-oracledb    |                                                                   | 纯 JS Oracle 数据库驱动程序      |\r\n| pgsql-ast-parser | a Postgres SQL syntax parser.                                     | SQL 语法解析器                   |\r\n| kanel            |                                                                   | 从 Postgres 生成 TypeScript 类型 |\r\n| knex             | A batteries-included SQL query & schema builder                   |                                  |\r\n| mysql2           |                                                                   | 专注于性能的 mysql               |\r\n| prisma           | Prisma is a next-generation ORM                                   | 下一代关系对象映射（自己说的）   |\r\n| mikro-orm        | TypeScript ORM for Node.js based on Data Mapper                   |                                  |\r\n| slonik           | PostgreSQL client                                                 |                                  |\r\n| node-pg-migrate  | database migration management built exclusively for postgres.     | 数据库迁移工具                   |\r\n\r\n### 爬虫\r\n\r\n| 包名称             | 英文介绍                              | 介绍                     |\r\n| ------------------ | ------------------------------------- | ------------------------ |\r\n| node-html-to-image |                                       | 将 HTML 转换为 img       |\r\n| crawlee            |                                       | 网络爬虫和浏览器自动化库 |\r\n| got                |                                       | Node HTTP 请求库         |\r\n| puppeteer          |                                       | 自动化浏览器操作         |\r\n| linkinator         | `npx linkinator https://example.com/` | 查看网站是否有效         |\r\n|                    |                                       |                          |\r\n|                    |                                       |                          |\r\n\r\n## 浏览器\r\n\r\n更倾向于在前端使用（或者是依赖于 DOM 等浏览器提供的对象），这些包默认是不依赖框架，或者在多个框架中都可以使用的\r\n\r\n| 包名称                                               | 英文介绍                                                              | 介绍                                      |\r\n| ---------------------------------------------------- | --------------------------------------------------------------------- | ----------------------------------------- |\r\n| frappe-gantt                                         | A simple, interactive, modern gantt chart library for the web         | 甘特图，日期计划表，时间线                |\r\n| gantt-schedule-timeline-calendar                     | Gantt, schedule, timeline and calendar components all in one!         | 计划表，甘特图，时间线                    |\r\n| @schedule-x/calendar                                 |                                                                       | 日历对工作进行管理                        |\r\n| @fullcalendar/core                                   |                                                                       | 日历组件                                  |\r\n| js-confetti、canvas-confetti                         |                                                                       | 添加一个彩带动画                          |\r\n| satori                                               | Satori only accepts JSX elements                                      | dom 转化为 svg                            |\r\n| highlight.js                                         |                                                                       | 语法高亮                                  |\r\n| prismjs                                              |                                                                       | 语法高亮                                  |\r\n| shiki                                                | A beautiful yet powerful syntax highlighter                           | 异步语法高亮，漂亮的代码查看器            |\r\n| sugar-high                                           |                                                                       | 极小的 jsx 语法高亮                       |\r\n| htmlparser2                                          |                                                                       | 快速解析 HTML                             |\r\n| gridstack                                            |                                                                       | 类似于 vue-grid-layout                    |\r\n| melonjs                                              |                                                                       | 成熟的 HTML5 游戏引擎。                   |\r\n| eslint-plugin-check-file                             |                                                                       | 强制检查文件名称                          |\r\n| @algolia/autocomplete-js                             |                                                                       | 自动完成组件                              |\r\n| qrcode                                               |                                                                       | 生成二维码                                |\r\n| selecto                                              | allows select elements in the drag area using the mouse or touch.     | 区域选择组件                              |\r\n| @formkit/auto-animate                                |                                                                       | 简单的方式添加动画（支持各种框架）        |\r\n| @tiptap/core                                         | Build collaborative editor apps                                       | 多人协作的编辑器                          |\r\n| mathlive                                             |                                                                       | 数学公式的编辑和展示                      |\r\n| copy-text-to-clipboard                               |                                                                       | 将内容粘贴到剪切板（2k）                  |\r\n| wavesurfer                                           |                                                                       | 音频文件的波形查看器                      |\r\n| fast-png                                             |                                                                       | 使用原生 JavaScript 事件解码编码 PNG 图片 |\r\n| svguitar                                             | 演示：https://github.com/omnibrain/svguitar                           | 用 SVG 做吉他谱！                         |\r\n| axios-token-manager                                  |                                                                       |                                           |\r\n| axios-mock-adapter                                   | Axios adapter that allows to easily mock requests                     | axios mock 适配器                         |\r\n| @popperjs/core                                       |                                                                       | popover 组件                              |\r\n| @floating-ui/dom                                     |                                                                       | popover 组件                              |\r\n| driver.js                                            |                                                                       | 第一次进入页面的提示组件                  |\r\n| moveable                                             |                                                                       | 移动缩放旋转等操作                        |\r\n| sortablejs                                           | Sortable is a JavaScript library for reorderable drag-and-drop lists. | 列表拖拽库                                |\r\n| capture-website                                      |                                                                       | 获取网站截屏                              |\r\n| reveal                                               |                                                                       | 滚动和动画结合起来，构建展示页面          |\r\n| emoji-mart                                           | a customizable emoji picker                                           | 自定义 emoji 选择器                       |\r\n| ai2html                                              |                                                                       | 将 Adobe Illustrator 文件转换成 HTML      |\r\n| screenfull                                           |                                                                       | 用于全屏和取消全屏展示                    |\r\n| @tsparticles/engine                                  | https://particles.js.org/                                             | 特效引擎                                  |\r\n| matter-js                                            | JavaScript 2D rigid body physics engine for the web                   | 刚体物理引擎                              |\r\n| signature_pad                                        | a JavaScript library for drawing smooth signatures.                   | 写字板的签名组件                          |\r\n| @algolia/autocomplete-js                             |                                                                       | 优化搜索自动提示体验                      |\r\n| @bitjson/qr-code                                     |                                                                       | 二维码生成                                |\r\n| embla-carousel（非包名                               |                                                                       | 轮播功能（支持主流框架                    |\r\n| jsbarcode                                            |                                                                       | 条形码生成器                              |\r\n| perfect-freehand                                     |                                                                       | 让手绘内容更加优雅                        |\r\n| atrament                                             |                                                                       | 另一个手绘包                              |\r\n| [tanstack](https://github.com/tanstack/table) 非包名 |                                                                       | 一系列的 UI 组件                          |\r\n| dexie                                                |                                                                       | indexDB 封装                              |\r\n| tonal                                                |                                                                       | 音乐理论包                                |\r\n| cally                                                |                                                                       | 无框架无依赖原生日历                      |\r\n| facesjs                                              |                                                                       | 生成卡通脸部（不怎么好看                  |\r\n| katex                                                | fast TeX math rendering                                               | 快速渲染的数学符号库                      |\r\n| simple-parallax-js                                   |                                                                       | 视差效果                                  |\r\n| fabric                                               |                                                                       | svg 和 canvas 互相转换的库                |\r\n| @egjs/infinitegrid                                   |                                                                       | 多框架支持的无限滚动                      |\r\n| html2pdf.js                                          |                                                                       | html 转为 pdf                             |\r\n| ag-grid-community                                    |                                                                       | 高性能数据 grid（表格）                   |\r\n| @glidejs/glide                                       |                                                                       | 一个滑动块（走马灯效果）                  |\r\n| spoiled                                              |                                                                       | 文字掩盖效果                              |\r\n| music-metadata                                       |                                                                       | 获取音乐原信息                            |\r\n| click-to-component                                   |                                                                       | 点击进入组件的源码编辑                    |\r\n|                                                      |                                                                       |                                           |\r\n|                                                      |                                                                       |                                           |\r\n|                                                      |                                                                       |                                           |\r\n|                                                      |                                                                       |                                           |\r\n\r\n### React\r\n\r\n| 包名称                                                      | 英文介绍                                                                         | 介绍                                  |\r\n| ----------------------------------------------------------- | -------------------------------------------------------------------------------- | ------------------------------------- |\r\n| react-qrcode-logo                                           | generate a customizable QR Code.                                                 | 生成带 Logo 的 qrcode                 |\r\n| react-spinners                                              |                                                                                  | 加载动画                              |\r\n| react-spring                                                | a cross-platform spring-physics first animation library.                         | 动画库                                |\r\n| react-chrono                                                | Render timelines in three different modes                                        | 时间线组件                            |\r\n| plyr-react                                                  |                                                                                  | 自定义多媒体播放器组件                |\r\n| @tremor/react                                               | The react library to build dashboards fast                                       | 快速快速构建后台                      |\r\n\r\n| react-wrap-balancer                                         |                                                                                  | 减少内容变换的换行频率次数            |\r\n| [react-virtuoso](https://github.com/petyosi/react-virtuoso) |                                                                                  | 虚拟滚动                              |\r\n| boring-avatars                                              | generates custom, SVG-based avatars from any username and color palette.         | 根据名称随机生成头像                  |\r\n| react-webcam                                                |                                                                                  | 摄像头相关                            |\r\n| react-icons                                                 | Include popular icons in your React projects                                     | Icon，但是 React                      |\r\n| html-react-parser                                           |                                                                                  | HTML 字符串解析为 React 代码的解析器  |\r\n| spectacle                                                   |                                                                                  | 基于 React 和 JSX 的演示文库          |\r\n| react-virtualized                                           |                                                                                  | 强大的虚拟列表组件                    |\r\n| react-grid-layout                                           | RGL is React-only                                                                | 自定义布局的组件                      |\r\n| react-tracking                                              |                                                                                  | 用户行为采集框架                      |\r\n| @codesandbox/sandpack-react                                 |                                                                                  | 前端沙盒                              |\r\n| react-quick-pinch-zoom                                      |                                                                                  | DOM 放大和拖动，多点控制形状          |\r\n| react-datasheet-grid                                        |                                                                                  | 表格大数据渲染                        |\r\n| react-scroll-sync                                           |                                                                                  | 同步滚动内容                          |\r\n| react-to-print                                              |                                                                                  | 打印相关功能                          |\r\n| react-scroll-parallax                                       |                                                                                  | 滚动动画                              |\r\n| react-aria-components                                       |                                                                                  | 40 多个可自定义、支持无障碍访问的组件 |\r\n| shadcn/ui（不是 npm 包名                                    | shadcn/ui https://ui.shadcn.com/                                                 | 把 UI 组件生成到你的项目内，高可扩展  |\r\n| react-resize-detector                                       | managing element size changes in React                                           | 利用 ResizeObserver 实现              |\r\n| react-use                                                   |                                                                                  | 提供 react 的 hooks                   |\r\n| jotai                                                       | simple useState replacement                                                      | 小型状态管理                          |\r\n| zustand                                                     |                                                                                  | 状态管理                              |\r\n| react-tag-autocomplete                                      |                                                                                  | 自动完成 tag 功能                     |\r\n| @million/lint                                               |                                                                                  | 类似 eslint，但给的是性能优化建议     |\r\n| react-geiger                                                | https://github.com/kristiandupont/react-geiger                                   | 让 React 应用卡顿时发出声音           |\r\n| onborda                                                     |                                                                                  | 产品导览功能（next                    |\r\n| spectacle                                                   |                                                                                  | 在线预览组件                          |\r\n| astro                                                       | [Astro](https://astro.build) is the all-in-one web framework designed for speed. | 访问速度优先 md 生成 SSR 框架         |\r\n| reassure                                                    | Performance testing companion for React and React Native.                        | react 和 RN 的性能测试工具            |\r\n| pixelmatch                                                  |                                                                                  | 像素级别对比图像差异                  |\r\n| react-ace                                                   |                                                                                  | react 的一个代码编辑器                |\r\n| valtio                                                      |                                                                                  | 为 react 设计状态管理                 |\r\n| @tanstack/react-query                                       |                                                                                  | 获取                                  |\r\n| @codaworks/react-glow                                       |                                                                                  | 高亮追踪功能                          |\r\n| react-burger-menu                                           |                                                                                  | 侧边可收起展开菜单样式                |\r\n|                                                             |                                                                                  |                                       |\r\n|                                                             |                                                                                  |                                       |\r\n|                                                             |                                                                                  |                                       |\r\n|                                                             |                                                                                  |                                       |\r\n|                                                             |                                                                                  |                                       |\r\n|                                                             |                                                                                  |                                       |\r\n|                                                             |                                                                                  |                                       |\r\n|                                                             |                                                                                  |                                       |\r\n|                                                             |                                                                                  |                                       |\r\n|                                                             |                                                                                  |                                       |\r\n\r\n#### UI / 组件\r\n\r\n| 包名称                      | 英文介绍                                                                                                 | 介绍                           |\r\n| --------------------------- | -------------------------------------------------------------------------------------------------------- | ------------------------------ |\r\n| react-content-loader        |                                                                                                          | 骨架内容组件屏                 |\r\n| react-pro-sidebar           |                                                                                                          | sidebar 组件库                 |\r\n| sonner                      | [Sonner](https://sonner.emilkowal.ski/) is an opinionated toast component for React.                     | 一个轻提示的组件               |\r\n| react-day-picker            | [DayPicker](http://react-day-picker.js.org) is a date picker component for [React](https://reactjs.org). | 日期选择（a11y）               |\r\n| @dnd-kit/core               | **Beautiful** and **accessible** drag and drop for lists with `React`                                    | React 可拖拽组件库             |\r\n| react-currency-input-field  |                                                                                                          | 金额输入框                     |\r\n| react-archer                |                                                                                                          | 在 DOM 之间创建箭头            |\r\n| react-clock                 |                                                                                                          | React 时钟                     |\r\n| react-barcode               |                                                                                                          | 条形码                         |\r\n| react-phone-number-input    |                                                                                                          | 国际电话输入                   |\r\n| react-awesome-reveal        |                                                                                                          | 元素可见时触发动画             |\r\n| react-international-phone   |                                                                                                          | 电话号码输入组件               |\r\n| hamburger-react             |                                                                                                          | 菜单转换动画                   |\r\n| react-force-graph           |                                                                                                          | force-graph 的 react 版本      |\r\n| @codaworks/react-glow       |                                                                                                          | 追踪高亮的功能                 |\r\n| react-big-calendar          |                                                                                                          | 大型日历的组件                 |\r\n| react-signature-pad-wrapper |                                                                                                          | 对 signature-pad 的 react 包装 |\r\n| react-datepicker            | A simple and reusable Datepicker component for React                                                     | 简单的日期选择组件             |\r\n| vaul                        |                                                                                                          | 一个简单的抽屉组件             |\r\n| @uiw/react-codemirror       |                                                                                                          | codemirror react               |\r\n| simple-keyboard             |                                                                                                          | 虚拟键盘                       |\r\n| react-loading-skeleton      |                                                                                                          | react 加载骨架                 |\r\n| react-snap-carousel         |                                                                                                          | 轮播滚动屏，自适应             |\r\n| react-paginate              |                                                                                                          | 自定义页脚，用于翻页功能       |\r\n| reecharts                   |                                                                                                          | d3 react 构建可视化库          |\r\n| @chakra-ui/system           |                                                                                                          |                                |\r\n| @viselect/react             |                                                                                                          | 可以通过框选选中多个 DOM       |\r\n|                             |                                                                                                          |                                |\r\n\r\n#### 文件相关\r\n\r\n| 包名称                     | 英文介绍 | 介绍                             |\r\n| -------------------------- | -------- | -------------------------------- |\r\n| yet-another-react-lightbox |          | 支持视频和滑动的媒体图片预览组件 |\r\n| react-pdf                  |          | 在 React 应用中显示 PDF。        |\r\n| react-medium-image-zoom    |          | 图片缩放工具                     |\r\n| react-image-crop           |          | 图片裁剪工具                     |\r\n| @onedoc/react-print        |          | 将 react 生成为 PDF              |\r\n|                            |          |                                  |\r\n\r\n### Vue\r\n\r\n| 包名称               | 英文介绍                                                                                        | 介绍                           |\r\n| -------------------- | ----------------------------------------------------------------------------------------------- | ------------------------------ |\r\n| vue-cropper          |                                                                                                 | 一个优雅的图片裁剪插件         |\r\n| vuetify              | the world's most popular Vue.js framework for building feature rich, blazing fast applications. | Vue 组件库                     |\r\n| vue-grid-layout      |                                                                                                 | 可以拖拽 DOM 的大小            |\r\n| sandpack-vue3        |                                                                                                 | vue 沙盒                       |\r\n| @formkit/core        |                                                                                                 |                                |\r\n| shadcn-vue           | A CLI for adding components to your project.                                                    | 复制组件到你自己的应用程序中。 |\r\n| vue-qr               |                                                                                                 | 提供 二维码生成                |\r\n| vue-virtual-scroller |                                                                                                 | vue 虚拟滚动的                 |\r\n| @inkline/inkline     |                                                                                                 | 一个可定制的 Vue.js 3 UI/UX 库 |\r\n| radix-vue            | UI component library for building high-quality, accessible design systems and web apps          | a11y 高质量 UI 框架            |\r\n| @tinymce/tinymce-vue | The world's #1 open source rich text editor.                                                    | 富文本编辑器                   |\r\n|                      |                                                                                                 |                                |\r\n|                      |                                                                                                 |                                |\r\n\r\n### 编辑器\r\n\r\n| 组件名称                 | 英文介绍         | 介绍                  |\r\n| ------------------------ | ---------------- | --------------------- |\r\n| codemirror               |                  | 代码编辑器            |\r\n| slate                    |                  | 富文本编辑器          |\r\n| prosemirror              |                  | 文本编辑器            |\r\n| @ckeditor/ckeditor5-core |                  | 编辑器                |\r\n| lexical                  |                  | 可扩展编辑器          |\r\n| monaco                   |                  | VS Code 的编辑器      |\r\n| trix                     | Rich Text Editor | 富文本编辑器          |\r\n| quill                    |                  | 所见即所得的编辑器    |\r\n| micromark                |                  | CommonMark 最小的实现 |\r\n|                          |                  |                       |\r\n\r\n### markdown\r\n\r\n| 组件名称          | 英文介绍                                                          | 介绍                                                          | 框架  |\r\n| ----------------- | ----------------------------------------------------------------- | ------------------------------------------------------------- | ----- |\r\n| remark            |                                                                   | 解析 MD，输出序列化内容                                       |       |\r\n| markdown-it       | Markdown parser done right. Fast and easy to extend.              |                                                               |       |\r\n| marked            |                                                                   | Markdown 解析器和编译器                                       |       |\r\n| remark-mdx        | remark plugin to support the MDX syntax                           | 支持 MDX 高亮                                                 |       |\r\n| @mdx-js/mdx       |                                                                   |                                                               |       |\r\n| @penrose/core     |                                                                   | 更多数学[相关图形](https://penrose.cs.cmu.edu/examples)的支持 |       |\r\n| mermaid           | definitions and a renderer to create and modify complex diagrams. | 为 markdown 添加更多支持                                      |       |\r\n| @milkdown/core    |                                                                   | 编辑 markdown 所见即所得                                      |       |\r\n| turndown          |                                                                   | 将 html 转换为 markdown                                       |       |\r\n| markdown-to-jsx   |                                                                   | 将 markdown 转换为 jsx                                        | react |\r\n| @blocknote/core   |                                                                   | 开源多人协作文档                                              |       |\r\n| @mdxeditor/editor |                                                                   | 更轻量的 markdown 编辑器                                      |       |\r\n| codehike          | bridges the gap between Markdown and React                        | 把 markdown 转为 react                                        |       |\r\n|                   |                                                                   |                                                               |       |\r\n\r\n### 文件查看\r\n\r\n| 组件名称       | 文档类型 | 介绍                                                                                                                             |\r\n| -------------- | -------- | -------------------------------------------------------------------------------------------------------------------------------- |\r\n| docx-preview   | doc/docx | 前端 docx 文件预览组件                                                                                                           |\r\n| mammoth        | doc/docx | 前端 word 编辑文件，可导出为 html                                                                                                |\r\n| docx           | doc/docx | 简单生成和修改 docx 文件                                                                                                         |\r\n| xlsx           | xlsx     | 提供 xlsx 数据处理（官方切换了 git 和安装的地址，详见[连接](https://docs.sheetjs.com/docs/getting-started/installation/nodejs)） |\r\n| exceljs        | xlsx     | 操作和书写数据，并且转化为 xlsx 和 JSON                                                                                          |\r\n| handsontable   | xlsx     | 数据绑定，数据分析，筛选，排序，和操作                                                                                           |\r\n| pptxgenjs      | pptx     | 创建 js ppt                                                                                                                      |\r\n| @webtoon/psd   | psd      | 无依赖的 .psd 文件解析器                                                                                                         |\r\n| @pdfslick/core | pdf      | 基于 PDF.js 的 pdf 文件查看器                                                                                                    |\r\n|                |          |                                                                                                                                  |\r\n|                |          |                                                                                                                                  |\r\n\r\n### CSS\r\n\r\n| 组件名称     | 文档类型                                       | 介绍                               |\r\n| ------------ | ---------------------------------------------- | ---------------------------------- |\r\n| css-doodle   | A web component for drawing patterns with CSS. | 使用 CSS 画图案                    |\r\n| @medv/finder | CSS Selector Generator                         | 生成 DOM 最短的 selector（选择器） |\r\n|              |                                                |                                    |\r\n|              |                                                |                                    |\r\n\r\n### 可视化\r\n\r\n| 组件名称                   | 文档类型                                                           | 介绍                                        | 框架  |\r\n| -------------------------- | ------------------------------------------------------------------ | ------------------------------------------- | ----- |\r\n| plotly.js                  | a standalone Javascript data visualization library                 | 独立的可视化库                              |       |\r\n| plotteus                   |                                                                    | 时间叙事的可视化库（滚动、UI 控件）         |       |\r\n| reagraph                   |                                                                    | 基于 WebGL 的 React 图形可视化库（600 stars | React |\r\n| @visx/visx                 |                                                                    | 基于 D3 的 React 可视化                     | React |\r\n| @xyflow/react 或 reactflow | building node-based UIs with React or Svelte.                      | 流程图，MIT                                 | React |\r\n| @excalidraw/excalidraw     | virtual hand-drawn style whiteboard.                               | 超级画布                                    | react |\r\n| @glideapps/glide-data-grid | https://grid.glideapps.com/                                        | 表格 + 可视化                               |       |\r\n| spacekit.js                |                                                                    | 宇宙 3D 视图                                |       |\r\n| vizzu                      | https://lib.vizzuhq.com/latest/                                    | 新的**动画**可视化库                        |       |\r\n| cytoscape                  | library for visualisation and analysis                             | 关系图，各个内容间的联系                    |       |\r\n| peaks.js                   | display and interact with audio waveforms                          | 音频文件的波形查看器和操作                  |       |\r\n|                            |                                                                    |                                             |       |\r\n|                            |                                                                    |                                             |       |\r\n| bpmn-js                    |                                                                    | 标准的 BPMN 图                              |       |\r\n| chart.js                   | Simple yet flexible JavaScript charting for designers & developers | 简单灵活的 chart                            |       |\r\n| apexcharts                 | build interactive data visualizations with simple API              | 编写互动数据                                |       |\r\n\r\n## 跨端\r\n\r\n### React Native\r\n\r\n| 包名称                                | 英文介绍                                                 | 介绍                         |\r\n| ------------------------------------- | -------------------------------------------------------- | ---------------------------- |\r\n| react-native-permissions              |                                                          | RN 的统一权限 API            |\r\n| react-native-picker-select            |                                                          | 选择功能                     |\r\n| react-native-svg                      |                                                          | 提供一个兼容层来适配 React。 |\r\n| react-native-share                    |                                                          | RN 分享功能                  |\r\n| tamagui                               | Style and UI for React（web and native）                 |                              |\r\n| @shopify/react-native-skia            | High-performance 2d Graphics for React Native using Skia | 绘制 2D 图像库               |\r\n| react-native-image-picker             | select a photo/video from the device library or camera.  | 从设备上选择图片文件         |\r\n| @expensify/react-native-live-markdown |                                                          | 跨平台 Markdown 编辑器       |\r\n| react-native-bootsplash               |                                                          | 启动页面                     |\r\n| react-native-vision-camera            | powerful, high-performance Camera library                | 相机库                       |\r\n| react-native-circular-progress        |                                                          | 动画进度                     |\r\n| react-native-background-actions       |                                                          | 运行后台任务的后台服务库     |\r\n| react-native-filament                 |                                                          | RN 3d 渲染引擎               |\r\n| react-native-compressor               |                                                          | 上传前压缩                   |\r\n\r\n// 删除 tauri 相关内容"},{"id":"2分钟环境搭建","metadata":{"permalink":"/blog/blog/2分钟环境搭建","editUrl":"https://github.com/blog/2025-02-14-环境搭建.md","source":"@site/blog/2025-02-14-环境搭建.md","title":"2分钟环境搭建","description":"环境配置","date":"2025-02-14T00:00:00.000Z","tags":[],"readingTime":6.26,"hasTruncateMarker":false,"authors":[{"name":"yelv","title":"Coding For fun","url":"https://github.com/inshadow1","imageURL":"/blog/img/128100849_4.png","key":"fall","page":null}],"frontMatter":{"slug":"2分钟环境搭建","title":"2分钟环境搭建","authors":"fall"},"unlisted":false,"prevItem":{"title":"npm前端包","permalink":"/blog/blog/npm前端包"},"nextItem":{"title":"TypeScript声明","permalink":"/blog/blog/TypeScript声明"}},"content":"## 环境配置\r\n\r\n使用 Chocolatey 进行快速安装，以及一些 PowerShell、VS code 、npm 的配置\r\n\r\n## Chocolatey\r\n\r\n快速安装软件，同类命令行应用有：[Scoop](https://scoop.sh/) 、winget\r\n\r\n当然不是普通的环境搭建方式，而是敲（或者是复制粘贴）三五行代码就可以搞定的那种安装。\r\n\r\n社区中有两种快速安装环境的工具 Scoop & [Chocolatey](https://community.chocolatey.org/packages)，这节课，我们学习使用 Chocolatey。\r\n\r\nWinGet 作为微软官方出品还需观望，也不知道微软这次靠不靠谱。\r\n\r\n### choco 安装\r\n\r\n在 `powershell`（右键开始菜单，选中 Windows PowerShell 管理员）执行下面程序进行安装\r\n\r\n```powershell\r\nSet-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\r\n```\r\n\r\n> 注：必需要管理员权限才能进行安装。否则报一大堆错\r\n\r\n### 软件使用\r\n\r\n例如，安装 node.js、nvm \r\n\r\n```powershell\r\nchoco install nodejs \r\nchoco install nvm\r\n```\r\n\r\n一行代码搞定前端全家桶！\r\n\r\n```powershell\r\n# windows 系统\r\n# 不建议直接安装 node，而是通过 nvm 安装 node\r\nchoco install -y googlechrome firefox git vscode nvm.portable sourcetree\r\n```\r\n\r\n> 注：安装的 firefox 是国际版的，不是国内版，两个版本之间无法共享账户数据\r\n\r\n不仅仅是前端全家桶\r\n\r\n安装 python 全家桶！\r\n\r\n```powershell\r\nchoco install -y git tortoisegit vscode python\r\nrefreshenv\r\npython -m pip install --upgrade pip\r\n# 中国教育网用户切换镜像\r\n# pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\r\npip install pipenv\r\n```\r\n\r\n安装 docker\r\n\r\n```bash\r\nchoco install docker-desktop\r\n```\r\n\r\n\r\n\r\n### 搜索软件\r\n\r\n```\r\nchoco search nodejs\r\n```\r\n\r\n## VS code\r\n\r\n### 快捷键\r\n\r\n- `ctrl + D`：阔选光标所在位置的内容，再次按下阔选相同内容\r\n- `Alt + Shift + F`：格式化代码\r\n- `alt + ↑/↓`：移动选中的整行内容\r\n- `shift + alt +↑/↓`：复制当前选中的行\r\n- `ctrl + enter`：创建新的行，并且跳转到下一行\r\n- `ctrl + ~`：呼出 vs code 命令行\r\n- `ctrl + /`：为所选区域添加注释\r\n- `alt + shift +a`：为所选区域添加注释，注意，这个快捷可能微信的截图 `alt + a` 冲突\r\n- 选中变量，然后点击 `f2`，可以重命名所有名称相同的变量，该操作跨文件\r\n\r\n### 插件\r\n\r\n- Chinese（simplified）功能和名字一样，提供中文的操作界面\r\n- Git Graph，提供图表方式来查看 git 版本历史\r\n- volar 为 vue 提供代码高亮，代码格式化\r\n- Material Icon Theme 提供各式各样的图标，用来美化和区分不同类型的文件\r\n- node-snippets  快速生成 node 代码块\r\n- ESlint 控制代码规范，对代码进行格式化处理，在配置中可以开启格式化功能\r\n\r\n**慎用插件**\r\n\r\n| 应用名称                  | 插件功能                                       |\r\n| ------------------------- | ---------------------------------------------- |\r\n| 小霸王                    | 小霸王游戏机                                   |\r\n| 超级鼓励师                | 加油，你是最棒的，年薪百万就在前方。           |\r\n| 韭菜盒子/vscode-stocks    | 看股票走势                                     |\r\n| 电影集                    | 看电影，刷剧                                   |\r\n| daily-anime               | 喜欢二次元，喜欢动漫，番剧的更新。             |\r\n| read-vscode-e/Thief-Book/ | 网易云阅读，可以一边敲代码一边看小说。         |\r\n| vsc-netease-music         | 可以听音乐，好像音乐本身感知不强，意义也不大。 |\r\n| vscode-maxPlus            | 浏览游戏资讯。                                 |\r\n| vscode-leetcode           | 刷算法。                                       |\r\n| Zhihu On VScode           | 刷知乎。                                       |\r\n| fakeupdate                | 模仿各种电脑系统的系统更新。                   |\r\n| LeetCode                  | 刷算法                                         |\r\n| NBA real-time score       | 看NBA数据。                                    |\r\n\r\n### 默认配置\r\n\r\n可以同步到 github 上面\r\n\r\n```json\r\n// 注意要在设置中开启保存时格式化代码\r\n{\r\n  \"workbench.iconTheme\": \"material-icon-theme\",\r\n  \"editor.fontSize\": 14,\r\n  \"editor.wordWrap\": \"on\",\r\n  \"editor.linkedEditing\":true,\r\n  \"editor.tabSize\": 2,\r\n  \"editor.detectIndentation\": false,\r\n  // 滚轮缩放编辑器大小\r\n  \"editor.mouseWheelZoom\": false,\r\n  \"diffEditor.ignoreTrimWhitespace\": false,\r\n  \"editor.unicodeHighlight.nonBasicASCII\": false,\r\n  \"diffEditor.renderSideBySide\": false,\r\n  \"javascript.updateImportsOnFileMove.enabled\": \"never\",\r\n  // 可以生成预览窗口，而不是打开一个文件就是一个独立的窗口\r\n  \"workbench.editor.enablePreview\": true, \r\n  \"editor.formatOnSave\": true,\r\n  \"[javascript]\": {\r\n    \"editor.defaultFormatter\": \"dbaeumer.vscode-eslint\"\r\n  },\r\n  \"[html]\": {\r\n    \"editor.defaultFormatter\": \"vscode.html-language-features\",\r\n  },\r\n  \"[json]\": {\r\n    \"editor.defaultFormatter\": \"vscode.json-language-features\"\r\n  },\r\n  \"[typescript]\": {\r\n    \"editor.defaultFormatter\": \"rvest.vs-code-prettier-eslint\"\r\n  },\r\n  \"[jsonc]\": {\r\n    \"editor.defaultFormatter\": \"rvest.vs-code-prettier-eslint\"\r\n  },\r\n  \"[vue]\": {\r\n    \"editor.defaultFormatter\": \"Vue.volar\"\r\n  },\r\n  \"editor.quickSuggestions\": {\r\n    \"strings\": true\r\n  },\r\n  \"search.followSymlinks\": false,\r\n  \"search.maxResults\": 200,\r\n  \"files.autoSave\": \"onFocusChange\",\r\n  \"emmet.includeLanguages\": {\r\n    \"editor.formatOnType\": \"true\",\r\n    \"editor.formatOnSave\": \"true\"\r\n  },\r\n  \"git.confirmSync\": false,\r\n  \"editor.fontLigatures\": false,\r\n  \"editor.autoClosingOvertype\": \"always\",\r\n  \"editor.stickyScroll.enabled\": true,\r\n  \"editor.stickyScroll.maxLineCount\": 3,\r\n  \"css.lint.float\": \"warning\",\r\n  \"css.lint.duplicateProperties\": \"error\",\r\n  \"css.lint.important\": \"warning\",\r\n  \"css.lint.universalSelector\": \"warning\",\r\n  \"less.lint.universalSelector\": \"warning\",\r\n  \"scss.lint.duplicateProperties\": \"warning\",\r\n  \"scss.lint.float\": \"warning\",\r\n  \"eslint.format.enable\": true,\r\n  \"[scss]\": {\r\n    \"editor.defaultFormatter\": \"vscode.css-language-features\"\r\n  },\r\n  \"window.commandCenter\": false,\r\n  \"extensions.autoUpdate\": \"onlyEnabledExtensions\",\r\n  \"explorer.compactFolders\": false,\r\n}\r\n```\r\n\r\n## 其它配置\r\n\r\n### windows 系统\r\n\r\n可以在 `设置：系统 -> 存储 -> 保存新内容的地方` 进行配置\r\n\r\n全部切换到需要的磁盘\r\n\r\n### PowerShell\r\n\r\n如果 powershell 不能执行一些命令，需要进行修改执行策略：\r\n\r\n```powershell\r\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned\r\n```\r\n\r\n### wsl\r\n\r\nwindows subsystem for linux \r\n\r\nlinux 的子系统\r\n\r\n```bash\r\n# 安装 wsl\r\nwsl --install\r\n# 安装 ubuntu\r\nwsl --install -d Ubuntu-22.04\r\n# 安装后，可以通过下面命令查看当前电脑上的 wsl 子系统\r\nwsl -l -v\r\n# 以下命令查看线上拥有的 linux 版本\r\nwsl -l -o\r\n```\r\n\r\n\r\n\r\n### npm\r\n\r\n`npm -v` 用于检测 npm 是否安装成功（安装 node 时会同时安装 npm）\r\n\r\n注：因为某些大家知道的原因，可能需要更换为国内的镜像，或者安装 yarn、pnpm，代替 npm。\r\n\r\n通过该命令 `npm get registry` 查看当前使用的镜像。\r\n\r\n通过 `npm set registry [target-webset]` 设置镜像\r\n\r\n一些镜像网址\r\n\r\n- `https://registry.npmjs.org/`（默认镜像网址）\r\n- `https://registry.npmmirror.com/`（阿里镜像，原地址为 `https://registry.npm.taobao.org`）\r\n\r\n## 项目创建\r\n\r\n初始项目搭建\r\n\r\n```powershell\r\npnpm create vite my-app-name --template <template-name>\r\n```\r\n\r\n支持的模板：\r\n\r\n- 原生：`vanilla`、`vanilla-ts`\r\n- Vue：`vue`、`vue-ts`\r\n- React：`react`、`react-ts`、`react-swc`、`react-swc-ts`、`preact`、`preact-ts`\r\n- Lit：`lit`、`lit-ts`\r\n- Svelte：`svelte`、`svelte-ts`"},{"id":"TypeScript声明","metadata":{"permalink":"/blog/blog/TypeScript声明","editUrl":"https://github.com/blog/2022-06-08-TypeScript声明.md","source":"@site/blog/2022-06-08-TypeScript声明.md","title":"TypeScript声明","description":"声明空间","date":"2022-06-08T00:00:00.000Z","tags":[],"readingTime":6.215,"hasTruncateMarker":false,"authors":[{"name":"yelv","title":"Coding For fun","url":"https://github.com/inshadow1","imageURL":"/blog/img/128100849_4.png","key":"fall","page":null}],"frontMatter":{"slug":"TypeScript声明","title":"TypeScript声明","authors":"fall"},"unlisted":false,"prevItem":{"title":"2分钟环境搭建","permalink":"/blog/blog/2分钟环境搭建"},"nextItem":{"title":"客户想要的不是她们所说的（译）","permalink":"/blog/blog/客户想要的不是她们所说的（译）"}},"content":"## 声明空间\r\n\r\n声明空间，就是声明类型和声明变量所在的不同空间。类型声明空间是 TypeScript 声明的类型空间，这些空间的变量**不能进行赋值**。变量声明空间可以进行赋值：\r\n\r\n类型声明空间\r\n\r\n```ts\r\nclass Foo{}\r\ntype Bus = {}\r\ninterface Bar{}\r\n// 这些都可以作为类型注解使用\r\nlet foo:Foo\r\nlet bus:Bus\r\nlet bar:Bar\r\n// 但是 Bar、Bus 不能赋值，因为它们只存在类型声明空间\r\nconst bar = Bar // error: cannot find name 'Bar'\r\n```\r\n\r\n变量声明空间\r\n\r\n```ts\r\nclass Foo {}\r\nconst someVar = Foo\r\n// class Foo {}  Foo 既会被放置到变量声明空间，也会放到类型声明空间\r\n// 所以 class 声明的内容既可以作为类型注解，也可以进行赋值\r\n```\r\n\r\n## 全局模块\r\n\r\n全局模块就是任何文件都可以访问的模块，默认情况下，在一个新的 ts 文件中写代码时，它处于全局命名空间中。\r\n\r\n```ts\r\n// foo.ts\r\nconst foo = 123\r\n// 此时，如果在相同的项目里，创建一个新的文件 bar.ts 系统会允许你使用 foo 内的内容\r\n// bar.ts\r\nconst back = foo\r\n```\r\n\r\n想避免暴露在全局作用空间\r\n\r\n```ts\r\n// foo.ts\r\nexport const foo = 123\r\n// 如果想继续使用 foo 就需要进行导入，并且使用其他变量也不会污染全局作用域\r\n// bar.ts\r\nimport {foo} from './foo' // 此时还会将该文件定义为一个模块，文件内定义的变量也不会污染全局空间\r\nconst back = foo\r\n```\r\n\r\n> 所以文件内，只要使用了 export 关键字，就会表示该文件是个模块。所以也常使用 `export {}` 放在首行，表示是一个模块。\r\n\r\n## 环境声明\r\n\r\n通过 `declare` 关键字来告诉 TypeScript 一个其他地方已经存在的代码（内容）。\r\n\r\n```ts\r\n// main.ts\r\nfoo = 1123 // Error\r\n```\r\n\r\n通常会使用 `.d.ts` 结尾的文件进行声明，一般会使用 `global.d.ts` 或者 `vendor.d.ts`。\r\n\r\n```\r\n// global.d.ts\r\ndeclare let foo:any\r\n// main.ts\r\nfoo = 1123 // declare 声明了该变量，将不会报错\r\n\r\n```\r\n\r\n其他的声明文件也类似于该文件，但是更加详细，所以如果自带 `.d.ts` 结尾的声明文件，一般不需要自行书写。\r\n\r\n在声明文件中，每个根级别的声明必须以 `declare` 关键字作为前缀， TypeScript 将不会把它编译成任何代码。\r\n\r\n开发者需要确保这些声明文件，和声明的内容在编译时存在。\r\n\r\n> 声明文件可以声明各种类型\r\n\r\n### TS的声明文件\r\n\r\n编译器通过声明文件能够显示来自其他包的错误和提示。并且声明文件提供有关库的所有类型信息。\r\n\r\n获取一个库的声明文件有两种方式\r\n\r\n- **Bundled** 包含了自己的声明文件，我们只需安装这个库，就可以立即使用它，看库中是否包含 index.d.ts 文件，有些库会在 `package.json` 文件的 `typings` 或 `types` 属性中指定类型文件。\r\n- **Definitely Typed** 是一个庞大的声明仓库，为没有声明文件的 JavaScript提供类型定义。这些类型定义通过众包的方式完成，微软和开源者一同管理。（比如 React 没有自己的声明文件，可以从 Definitely Typed 获取它的声明文件）\r\n\r\n```bash\r\n# yarn \r\nyarn add --dev @types/react\r\n# npm \r\nnpm i --save-dev @types/react\r\n```\r\n\r\n### 第三方代码的声明\r\n\r\n有时，可能在某些内容上添加显式注解，并且你会在类型声明空间中使用它。\r\n\r\n可以通过 `type` 快速实现它\r\n\r\n```\r\ndeclare type Staff = {\r\n\tname:string\r\n}\r\n```\r\n\r\n> 我个人倾向认为这是自定义声明，在声明文件中进行声明之后，在任何其他的文件中都可以使用，并且无需进行引入。在使用中要符合 `declear` 中定义的约束。\r\n\r\n### 第三方 NPM 模块\r\n\r\n可以用声明一个全局模块的方式，来解决查找模块路径的问题。\r\n\r\n`global.d.ts` 是一种扩充 `lib.d.ts` 很好的方式，如果你需要的话。\r\n\r\n```\r\n// 定义 global.d.ts\r\ndeclare module 'jquery'{\r\n  // some variable declarations\r\n  export var bar: number;\r\n}\r\n// 导入使用 main.js\r\n// 在必要的时候进行导入\r\nimport * as $ from 'jquery'\r\n// import vue from 'vue' // 如果没有进行 declare 声明，直接引入会报错\r\n```\r\n\r\n有人会声明 `npm i @types/jquery`\r\n\r\n### 非 JS 资源\r\n\r\n在 ts 文件中，可能引入其他类型的文件，比如 png。为了避免报错，向文件中进行声明。\r\n\r\n```\r\n// index.d.ts\r\ndeclare module '*.svg'\r\ndeclare module '*.png'\r\ndeclare module '*.vue'{ // 用于定义以 .vue 结尾的文件，并且让 typescript 跳过识别\r\n  import type {DefineComponent} from 'vue'\r\n  const component: DefineComponent <{}, {}, any>\r\n  export default component\r\n}\r\n// 在声明之后就可以使用\r\nimport * as foo from './some/file.css'\r\n```\r\n\r\n## 参考文章\r\n\r\n| 文章名称           | 链接                                                         |\r\n| ------------------ | ------------------------------------------------------------ |\r\n| 深入理解TypeScript | [jkchao.github.io/typescript-…](https://link.juejin.cn?target=https%3A%2F%2Fjkchao.github.io%2Ftypescript-book-chinese%2F) |\r\n| 铁皮饭盒           | [juejin.cn/post/684490…](https://juejin.cn/post/6844903993727008776) |\r\n\r\n如有错误（不当）可以在评论区指出。\r\n\r\n转载请注明出处。"},{"id":"客户想要的不是她们所说的（译）","metadata":{"permalink":"/blog/blog/客户想要的不是她们所说的（译）","editUrl":"https://github.com/blog/2022-06-08-客户想要的不是她们所说的.md","source":"@site/blog/2022-06-08-客户想要的不是她们所说的.md","title":"客户想要的不是她们所说的（译）","description":"我见过的用户中，他们没有一个不是特别详细的，迫切的想告诉我他们想要的。问题是，你的客户并不能一直告诉你实事的全貌。他们一般来讲不会说谎，但是他们的说话方式是作为用户的表达方式，而不是开发者的表达方式。她们拥有他们的团队，和他们的沟通方式。她们会遗漏重要的细节，她们会当你已经在他们公司干活 20 年了，就跟他们一样熟悉。真正复杂的是，一开始他们就不知道怎么做。一些客户可能构建了宏图，但是他们很少能充分的地交流她们认为的这些“宏图”的细节。另一些客户可能不会特别的清楚，但是他们知道她们不想要什么。在她们不完整的说出他们想要的东西的情况下，我们怎样才能去开发一个项目？答案显而易见，多去配合他们。","date":"2022-06-08T00:00:00.000Z","tags":[{"inline":true,"label":"翻译","permalink":"/blog/blog/tags/翻译"},{"inline":true,"label":"客户","permalink":"/blog/blog/tags/客户"}],"readingTime":4.52,"hasTruncateMarker":true,"authors":[{"name":"yelv","title":"Coding For fun","url":"https://github.com/inshadow1","imageURL":"/blog/img/128100849_4.png","key":"fall","page":null}],"frontMatter":{"slug":"客户想要的不是她们所说的（译）","title":"客户想要的不是她们所说的（译）","authors":"fall","tags":["翻译","客户"]},"unlisted":false,"prevItem":{"title":"TypeScript声明","permalink":"/blog/blog/TypeScript声明"},"nextItem":{"title":"git功能查找","permalink":"/blog/blog/git功能查找"}},"content":"我见过的用户中，他们没有一个不是特别详细的，迫切的想告诉我他们想要的。问题是，你的客户并不能一直告诉你实事的全貌。他们一般来讲不会说谎，但是他们的说话方式是作为用户的表达方式，而不是开发者的表达方式。她们拥有他们的团队，和他们的沟通方式。她们会遗漏重要的细节，她们会当你已经在他们公司干活 20 年了，就跟他们一样熟悉。真正复杂的是，一开始他们就不知道怎么做。一些客户可能构建了宏图，但是他们很少能充分的地交流她们认为的这些“宏图”的细节。另一些客户可能不会特别的清楚，但是他们知道她们不想要什么。在她们不完整的说出他们想要的东西的情况下，我们怎样才能去开发一个项目？答案显而易见，多去配合他们。\r\n\r\n<!--truncate-->\r\n\r\n尽早质疑你的客户，并且要经常质疑你的客户。不要单纯的重申他们已经告诉你她们想要的话。记住，他们想要的不是她们提出的。我经常和他们在交流中这样做以查看她们对此的表现。你可能会吃惊于，客户这个词，可能完全不同于所谓的甲方。而且，这些人告诉你她们想要这个应用使用的是她们所使用的属于，并且期待你能够注意到她们所谈论的内容。而你会疑惑，然后你的项目也跟着遭殃。\r\n\r\n直到你能确定客户到底需要什么时，和你的客户多次讨论这些话题。试着和他们重复问题两到三次。和他们谈论刚刚说过的话题，或者是话题结束后，以获取更好的背景。尽可能的，让不同的人在不同的环境下让她们回答你相同的话题。她们大多会告诉你不同的故事，也会揭示剩余的还没有表明的事实。两个人告诉你相同的话题，可能会反驳彼此。让我们在开始这些超级复杂的软件之前，解决这些差异，尽可能去成功。\r\n\r\n在你们的对话中使用可视化进行帮助。这可能和在会话中使用一块白板一样简单，和设计阶段创建实体模型一样简单，或者像制作一个功能原型一样复杂。众所周知，可视化工具可以帮助延长我们的注意力，并提高信息利用率。利用这个实事，让你的项目在成功的方向上。\r\n\r\n在过去，我是一“多媒体程序员”，去生产炫目的项目。我们的一个甲方尽量描绘了他们的想法，这个想法看起来如何，感受如何。主题颜色的配色方案演示文稿在设计会议上表明了黑色背景。我们以为我们搞定了。图形设计师开始创建上百个图层的图片文件。很多时间都用来打磨最终产品，惊人的一幕出现在我们向客户展示我们工作的成果那天。当她看见产品的时候，他说他的原话是，“当我说黑色的时候，我想要的是白色”，看，黑白都不分明了。\r\n\r\nBy [Nate Jackson](http://programmer.97things.oreilly.com/wiki/index.php/Icnatejackson)"},{"id":"git功能查找","metadata":{"permalink":"/blog/blog/git功能查找","editUrl":"https://github.com/blog/2022-03-16-git功能查找.md","source":"@site/blog/2022-03-16-git功能查找.md","title":"git功能查找","description":"下载： 从淘宝镜像上下载 git，选择最新版就可以了","date":"2022-03-16T00:00:00.000Z","tags":[],"readingTime":12.8,"hasTruncateMarker":false,"authors":[{"name":"yelv","title":"Coding For fun","url":"https://github.com/inshadow1","imageURL":"/blog/img/128100849_4.png","key":"fall","page":null}],"frontMatter":{"slug":"git功能查找","title":"git功能查找","authors":"fall"},"unlisted":false,"prevItem":{"title":"客户想要的不是她们所说的（译）","permalink":"/blog/blog/客户想要的不是她们所说的（译）"}},"content":"> **下载：** 从淘宝镜像上下载 git，选择最新版就可以了\r\n>\r\n> [npm.taobao.org/mirrors/git…](https://link.juejin.cn?target=https%3A%2F%2Fnpm.taobao.org%2Fmirrors%2Fgit-for-windows%2F)\r\n\r\n**Git工作流程图**（空间上的 git 操作）\r\n\r\n![img](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0478a7ad108e463191d27a6e741a6e64~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp)\r\n\r\n> **共有四个区域**：\r\n>\r\n> - Workspace：工作区\r\n> - Index / Stage：暂存区\r\n> - Repository：仓库区（或本地仓库）\r\n> - Remote：远程仓库\r\n\r\n| 命令名称         | 作用                                       |\r\n| ---------------- | ------------------------------------------ |\r\n| clone（克隆）    | 从远程克隆仓库，将远程的代码下载到本地     |\r\n| commit（提交）   | commit 将修改提交到本地仓库，              |\r\n| push（推送）     | push 将本地仓库的内容提交到远程库          |\r\n| pull（拉取）     | 将远程最新的代码拉取到本地，自动合并 merge |\r\n| fetch（获取）    | 将远程最新的代码拉取到本地，不合并 merge   |\r\n| checkout（检出） | 创建分支，切换分支                         |\r\n| reset            | 将代码回退到选定的版本                     |\r\n| tag              | 就是给版本打个标记，方便识别               |\r\n\r\n## git 工具\r\n\r\n### git介绍\r\n\r\n### 配置文件\r\n\r\n`.gitignore` 是 git 的配置文件，可以用在用户主目录之下（全局配置），也可以用在项目目录下（项目配置），作用就是告诉Git 哪些文件不需要添加到版本管理中。\r\n\r\n```swift\r\n/mtk/ 过滤整个文件夹\r\n*.zip 过滤所有.zip文件\r\n/mtk/do.c 过滤某个具体文件\r\n复制代码\r\n```\r\n\r\n通过上面这些规则进行过滤之后，被过滤的文件不会通过push传递到服务器，本地库中还是存在的。\r\n\r\n```swift\r\n!src/   不过滤该文件夹\r\n!*.zip   不过滤所有.zip文件\r\n!/mtk/do.c 不过滤该文件\r\n复制代码\r\n```\r\n\r\n可以通过以上设置不过滤以上的文件\r\n\r\n**配置文件的语法**\r\n\r\n```swift\r\n以斜杠/开头表示目录；\r\n以星号*通配多个字符；\r\n以问号?通配单个字符\r\n以方括号[]包含单个字符的匹配列表；\r\n以叹号!表示不忽略(跟踪)匹配到的文件或目录；\r\n复制代码\r\n```\r\n\r\n**配置文件示例**\r\n\r\n```\r\na、规则：fd1/*\r\n忽略目录 fd1 下的全部内容；注意，不管是根目录下的 /fd1/ 目录，还是某个子目录 /child/fd1/ 目录都会被忽略；\r\nb、规则：/fd1/*\r\n说明：忽略根目录下的 /fd1/ 目录的全部内容；\r\nc、规则：\r\n/*\r\n!.gitignore\r\n!/fw/bin/\r\n!/fw/sf/\r\n说明：忽略全部内容，但是不忽略 .gitignore 文件、根目录下的 /fw/bin/ 和 /fw/sf/ 目录\r\n复制代码\r\n```\r\n\r\n**用 Git Bash 创建文件夹**\r\n\r\n- 根目录下右键选择“Git Bash Here”进入bash命令窗口；\r\n- 输入`vim .gitignore`或`touch .gitignore`命令，打开文件（没有文件会自动创建）；\r\n- 按i键切换到编辑状态，输入规则，例如node_modules/，然后按Esc键退出编辑，输入:wq保存退出。\r\n\r\n### 生成密钥\r\n\r\n> 命令行中执行命令：\r\n>\r\n> `ssh-keygen -t rsa -C \"xxxx@gmail.com\"` 必须填写自己使用的邮箱\r\n\r\n## git 的操作\r\n\r\n### 简单的提交代码流程\r\n\r\n> 连接克隆远程仓库 git clone [balabalabala.com](https://link.juejin.cn?target=https%3A%2F%2Fbalabalabala.com)\r\n>\r\n> 在项目的文件夹中打开`cmd 命令行工具`（一般为含有 ReadMe 的文件夹）\r\n>\r\n> `git add . `   将代码添加到版本里面（添加到暂存区）\r\n>\r\n> `git commit -m`\t“放置你想添加的内容”\r\n>\r\n> 最后使用 `git push` 将本地库里面的代码提交到网络共享库里面\r\n\r\n### 常用功能查找\r\n\r\n> - `git diff --shortstat \"@{0 day ago}\"` 看看自己一天写了多少代码\r\n> - 查看远程仓库`git remote -v`\r\n> - 显示有变更的文件`git status`\r\n> - 退回到上一个版本：`git reset --hard head`\r\n> - 查看日志：`git log `或者` git reflog`\r\n> - 查看工作区和暂存区版本区别`git diff`\r\n> - 回退上一个版本`git reset --hard HEAD^` 每多一个`^`多回退一个版本\r\n> - 回退到指定版本`git reset --hard version` version 为版本号\r\n\r\n### 新建代码仓库\r\n\r\n- `git init` 在本地进行初始化（建立工作区）\r\n- `git init [project-name]` 新建一个目录，作为代码仓库\r\n- `git clone [url]`\r\n\r\n`.git` 文件夹存储当前项目的所有版本信息，这个文件夹通常会隐藏\r\n\r\n### 暂存区控制\r\n\r\n```bash\r\n$ git add [file1] [file2] ...  # 添加指定文件到暂存区\r\n$ git add [dir] # 添加指定目录到暂存区，包括子目录\r\n$ git add . # 添加当前目录的所有文件到暂存区\r\n\r\n$ git add -p\r\n# 确认所有文件的变化，并且可以做最终修改\r\n# 对于同一个文件的多处变化，可以分多次提交\r\n\r\n$ git rm [file1] [file2] ... # 删除工作区文件，并且将这次删除放入暂存区\r\n$ git rm --cached [file] # 停止追踪指定文件，但该文件会保留在工作区\r\n$ git mv [file-original] [file-renamed] # 改名文件，并且将这个改名放入暂存区\r\n复制代码\r\n```\r\n\r\n### 本地仓库\r\n\r\n```bash\r\n$ git commit -m \"message\" # 提交暂存区内容提交到仓库区\r\n$ git commit [file1] [file2] ... -m [message] # 提交暂存区的指定文件到仓库区\r\n$ git commit -a # 提交工作区自上次 commit 之后的变化，直接到仓库区\r\n$ git commit -v # 提交时显示所有 diff 信息\r\n\r\n$ git commit --amend -m [message]\r\n# 使用一次新的commit，替代上一次提交\r\n# 如果代码没有任何新变化，则用来改写上一次 commit 的提交信息 message\r\n\r\n$ git commit --amend [file1] [file2] ... # 重做上一次commit，并包括指定文件的新变化\r\n复制代码\r\n```\r\n\r\n### 分支操作\r\n\r\n```bash\r\n$ git branch # 列出所有本地分支\r\n$ git branch -r # 列出所有远程分支\r\n$ git branch -a # 列出所有本地分支和远程分支\r\n\r\n$ git checkout master  # 切换到master分支下\r\n$ git checkout -b [branch] # 新建一个分支，并切换到该分支\r\n$ git branch [branch-name] # 新建一个分支，但依然停留在当前分支\r\n\r\n$ git branch [branch] [commit] # 新建一个分支，指向指定commit\r\n$ git branch --track [branch] [remote-branch] # 新建一个分支，与指定的远程分支建立追踪关系\r\n$ git checkout [branch-name] # 切换到指定分支，并更新工作区\r\n$ git checkout -  # 切换到上一个分支\r\n\r\n$ git branch --set-upstream [branch] [remote-branch] # 建立追踪关系，在现有分支与指定的远程分支之间\r\n$ git merge [branch] # 合并指定分支到当前分支\r\n$ git cherry-pick [commit] # 选择一个commit，合并进当前分支\r\n$ git branch -d [branch-name] # 删除分支\r\n\r\n# 删除远程分支\r\n$ git push origin --delete [branch-name]\r\n$ git branch -dr [remote/branch]\r\n复制代码\r\n```\r\n\r\n### 远程功能\r\n\r\n```bash\r\n$ git fetch [remote] # 下载远程仓库的所有变动\r\n$ git pull [remote] [branch] # 取回远程仓库的变化，并与本地分支合并\r\n$ git remote -v # 显示所有远程仓库\r\n$ git remote show [remote] # 显示某个远程仓库的信息\r\n$ git remote add [shortname] [url] # 增加一个新的远程仓库，并命名\r\n\r\n$ git push origin master # 推到 master 上\r\n$ git push [remote] [branch] # 上传本地指定分支到远程仓库\r\n$ git push [remote] --force # 强行推送当前分支到远程仓库，即使有冲突\r\n$ git push -u origin login # 将当前子分支推到一个新创建的 login 分之中\r\n\r\n$ git push [remote] --all # 推送所有分支到远程仓库\r\n$ git push origin --delete [branch-name]  # 删除远程分支\r\n复制代码\r\n```\r\n\r\n### 撤销操作\r\n\r\n```bash\r\n$ git checkout [file] # 恢复暂存区的指定文件到工作区\r\n$ git checkout [commit] [file] # 恢复某个commit的指定文件到暂存区和工作区\r\n$ git checkout . # 恢复暂存区的所有文件到工作区\r\n$ git reset [file] # 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\r\n\r\n$ git reset --hard # 重置暂存区与工作区，与上一次commit保持一致\r\n$ git reset [commit] # 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\r\n$ git reset --hard [commit] # 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\r\n$ git reset --keep [commit] # 重置当前HEAD为指定commit，但保持暂存区和工作区不变\r\n\r\n$ git revert [commit]\r\n# 新建一个commit，用来撤销指定commit\r\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\r\n\r\n# 暂时将未提交的变化移除，稍后再移入\r\n$ git stash\r\n$ git stash pop\r\n复制代码\r\n```\r\n\r\n### 标签的设定和查看\r\n\r\n```bash\r\n$ git tag # 列出所有tag\r\n$ git tag [tag] # 新建一个tag在当前commit\r\n$ git tag [tag] [commit] # 新建一个tag在指定commit\r\n$ git tag -d [tag] # 删除本地tag\r\n\r\n$ git push origin :refs/tags/[tagName] # 删除远程tag\r\n$ git show [tag] # 查看tag信息\r\n$ git push [remote] [tag] # 提交指定tag\r\n$ git push [remote] --tags # 提交所有tag\r\n$ git checkout -b [branch] [tag] # 新建一个分支，指向某个tag\r\n复制代码\r\n```\r\n\r\n### 查看日志信息\r\n\r\n```bash\r\n$ git status # 显示有变更的文件\r\n$ git log # 显示当前分支的版本历史\r\n$ git log --stat # 显示commit历史，以及每次commit发生变更的文件\r\n$ git log -S [keyword] # 搜索提交历史，根据关键词\r\n\r\n$ git log [tag] HEAD --pretty=format:%s # 显示某个commit之后的所有变动，每个commit占据一行\r\n$ git log [tag] HEAD --grep feature # 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\r\n$ git log --follow [file] # 显示某个文件的版本历史，包括文件改名\r\n$ git whatchanged [file]\r\n\r\n$ git log -p [file] # 显示指定文件相关的每一次diff\r\n$ git log -5 --pretty --oneline # 显示过去5次提交\r\n$ git shortlog -sn # 显示所有提交过的用户，按提交次数排序\r\n$ git blame [file] # 显示指定文件是什么人在什么时间修改过\r\n\r\n$ git diff # 显示暂存区和工作区的差异\r\n$ git diff --cached [file] # 显示暂存区和上一个commit的差异\r\n$ git diff HEAD # 显示工作区与当前分支最新commit之间的差异\r\n$ git diff [first-branch]...[second-branch] # 显示两次提交之间的差异\r\n\r\n$ git diff --shortstat \"@{0 day ago}\" # 显示今天你写了多少行代码\r\n$ git show [commit] # 显示某次提交的元数据和内容变化\r\n$ git show --name-only [commit] # 显示某次提交发生变化的文件\r\n$ git show [commit]:[filename] # 显示某次提交时，某个文件的内容\r\n\r\n$ git reflog # 显示当前分支的最近几次提交\r\n```"}]}}